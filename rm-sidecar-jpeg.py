# rm-sidecar-jpeg.py version 1.0.0
# Copyright (C) 2014 Suguru YAMAMOTO
# https://github.com/sgryjp/rm-sidecar-jpeg
import os
import sys

raw_exts = ('.3fr', '.ari', '.arw', '.bay', '.cap', '.cr2', '.crw',
            '.dcs', '.dcr', '.dng', '.drf', '.eip', '.erf', '.fff',
            '.iig', '.k25', '.kdc', '.mdc', '.mef', '.mos', '.mrw',
            '.nef', '.nrw', '.obm', '.orf', '.pef', '.ptx', '.pxn',
            '.r3d', '.raf', '.raw', '.rwl', '.rw2', '.rwz', '.sr2',
            '.sr2', '.srf', '.srw', '.x3f')
jpeg_exts = ('.jpeg', '.jpg')
image_exts = raw_exts + jpeg_exts

def list_image_files(dir, filter=None):
    """Enumerates absolute paths of files under `dir` but excluding those
    the function `filter` returns False.
    """
    for entry in os.listdir(dir):
        path = os.path.join(dir, entry)
        if os.path.isdir(path):
            for p in list_image_files(path, filter):
                yield p
        elif any((entry.lower().endswith(ext) for ext in image_exts)):
            if filter and not filter(path):
                continue
            yield path

def is_sidecar_jpeg(path):
    """Returns whether the file specified with `path` is a sidecar JPEG
    file or not.
    """
    path_filename, ext = os.path.splitext(path)
    ext = ext.lower()
    return any((ext == x for x in jpeg_exts)) and \
           any((os.path.exists(path_filename + x) for x in raw_exts))

if __name__=='__main__':
    usage = """
Usage: rm-sidecar-jpeg [-f] [-l] [-h] [DIRECTORY]

A script to remove (delete) "sidecar" JPEG files recursively.

A sidecar jpeg file is a file which has the same name as a paired RAW
image file which is generated by digital cameras or RAW development
softwares. Note that JPEG files which is a master image will not be
targeted so this script only targets JPEG files which can be
regenerated by RAW development process.

This scripts searches the DIRECTORY and its subdirectories for JPEG
files if specified. If no directory was specified, this scripts searches
current directory.

Options:
  -f          remove sidecar JPEG files without a prompt
  -l          just list sidecar JPEG files
  -h          show this help message and exit
"""
    
    mode_force = False
    mode_list = False
    root_dir = os.path.abspath('.')
    
    # Parse command-line options
    for i, arg in enumerate(sys.argv):
        if arg == '-h':
            print(usage)
            quit()
        elif arg == '-f':
            mode_force = True
        elif arg == '-l':
            mode_list = True
        elif 1 <= i:
            root_dir = os.path.abspath(arg)
    
    # Process
    try:
        for filepath in list_image_files(root_dir, is_sidecar_jpeg):
            if mode_list:
                print(filepath)
            elif mode_force:
                os.remove(filepath)
                print(filepath)
            else:
                sys.stdout.write('Remove file "%s"? ' % filepath)
                sys.stdout.flush()
                if sys.stdin.readline().lower().startswith('y'):
                    print(filepath)
    except KeyboardInterrupt as e:
        print('\nProcess interrupted.')
    except OSError as e:
        print('\nError: ', e)
